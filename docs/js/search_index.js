var search_data = {"index":{"searchIndex":["contractmodel","generatedweb3methods","integer","object","string","web3","ethcalls","minercalls","netcalls","personalcalls","shhcalls","txpoolcalls","web3calls","call()","createcontract()","do_request()","eth_accounts()","eth_blocknumber()","eth_call()","eth_coinbase()","eth_compilelll()","eth_compileserpent()","eth_compilesolidity()","eth_estimategas()","eth_gasprice()","eth_getbalance()","eth_getblockbyhash()","eth_getblockbynumber()","eth_getblocktransactioncountbyhash()","eth_getblocktransactioncountbynumber()","eth_getcode()","eth_getcompilers()","eth_getfilterchanges()","eth_getfilterlogs()","eth_getlogs()","eth_getstorageat()","eth_gettransactionbyblockhashandindex()","eth_gettransactionbyblocknumberandindex()","eth_gettransactionbyhash()","eth_gettransactioncount()","eth_gettransactionreceipt()","eth_getunclebyblockhashandindex()","eth_getunclebyblocknumberandindex()","eth_getunclecountbyblockhash()","eth_getunclecountbyblocknumber()","eth_getwork()","eth_hashrate()","eth_mining()","eth_newblockfilter()","eth_newfilter()","eth_newpendingtransactionfilter()","eth_pendingtransactions()","eth_protocolversion()","eth_resend()","eth_sendrawtransaction()","eth_sendtransaction()","eth_sign()","eth_submithashrate()","eth_submitwork()","eth_syncing()","eth_uninstallfilter()","ether_to_0xwei()","ether_to_wei()","getcontractaddress()","loadabifile()","miner_makedag()","miner_setextra()","miner_setgasprice()","miner_start()","miner_startautodag()","miner_stop()","miner_stopautodag()","net_listening()","net_peercount()","net_version()","new()","new()","personal_ecrecover()","personal_importrawkey()","personal_listaccounts()","personal_lockaccount()","personal_newaccount()","personal_sign()","personal_signandsendtransaction()","personal_unlockaccount()","sendether()","shh_addtogroup()","shh_getfilterchanges()","shh_getmessages()","shh_hasidentity()","shh_newfilter()","shh_newgroup()","shh_newidentity()","shh_post()","shh_uninstallfilter()","shh_version()","signature()","to_0x()","to_decimal()","to_hex()","to_padded_hex_string()","txpool_status()","web3_clientversion()","web3_sha3()","wei_to_ether()","keyvaluestore.abi","test.abi"],"longSearchIndex":["contractmodel","generatedweb3methods","integer","object","string","web3","web3::ethcalls","web3::minercalls","web3::netcalls","web3::personalcalls","web3::shhcalls","web3::txpoolcalls","web3::web3calls","contractmodel#call()","web3#createcontract()","web3#do_request()","web3::ethcalls#eth_accounts()","web3::ethcalls#eth_blocknumber()","web3::ethcalls#eth_call()","web3::ethcalls#eth_coinbase()","web3::ethcalls#eth_compilelll()","web3::ethcalls#eth_compileserpent()","web3::ethcalls#eth_compilesolidity()","web3::ethcalls#eth_estimategas()","web3::ethcalls#eth_gasprice()","web3::ethcalls#eth_getbalance()","web3::ethcalls#eth_getblockbyhash()","web3::ethcalls#eth_getblockbynumber()","web3::ethcalls#eth_getblocktransactioncountbyhash()","web3::ethcalls#eth_getblocktransactioncountbynumber()","web3::ethcalls#eth_getcode()","web3::ethcalls#eth_getcompilers()","web3::ethcalls#eth_getfilterchanges()","web3::ethcalls#eth_getfilterlogs()","web3::ethcalls#eth_getlogs()","web3::ethcalls#eth_getstorageat()","web3::ethcalls#eth_gettransactionbyblockhashandindex()","web3::ethcalls#eth_gettransactionbyblocknumberandindex()","web3::ethcalls#eth_gettransactionbyhash()","web3::ethcalls#eth_gettransactioncount()","web3::ethcalls#eth_gettransactionreceipt()","web3::ethcalls#eth_getunclebyblockhashandindex()","web3::ethcalls#eth_getunclebyblocknumberandindex()","web3::ethcalls#eth_getunclecountbyblockhash()","web3::ethcalls#eth_getunclecountbyblocknumber()","web3::ethcalls#eth_getwork()","web3::ethcalls#eth_hashrate()","web3::ethcalls#eth_mining()","web3::ethcalls#eth_newblockfilter()","web3::ethcalls#eth_newfilter()","web3::ethcalls#eth_newpendingtransactionfilter()","web3::ethcalls#eth_pendingtransactions()","web3::ethcalls#eth_protocolversion()","web3::ethcalls#eth_resend()","web3::ethcalls#eth_sendrawtransaction()","web3::ethcalls#eth_sendtransaction()","web3::ethcalls#eth_sign()","web3::ethcalls#eth_submithashrate()","web3::ethcalls#eth_submitwork()","web3::ethcalls#eth_syncing()","web3::ethcalls#eth_uninstallfilter()","web3#ether_to_0xwei()","web3#ether_to_wei()","web3#getcontractaddress()","object#loadabifile()","web3::minercalls#miner_makedag()","web3::minercalls#miner_setextra()","web3::minercalls#miner_setgasprice()","web3::minercalls#miner_start()","web3::minercalls#miner_startautodag()","web3::minercalls#miner_stop()","web3::minercalls#miner_stopautodag()","web3::netcalls#net_listening()","web3::netcalls#net_peercount()","web3::netcalls#net_version()","contractmodel::new()","web3::new()","web3::personalcalls#personal_ecrecover()","web3::personalcalls#personal_importrawkey()","web3::personalcalls#personal_listaccounts()","web3::personalcalls#personal_lockaccount()","web3::personalcalls#personal_newaccount()","web3::personalcalls#personal_sign()","web3::personalcalls#personal_signandsendtransaction()","web3::personalcalls#personal_unlockaccount()","web3#sendether()","web3::shhcalls#shh_addtogroup()","web3::shhcalls#shh_getfilterchanges()","web3::shhcalls#shh_getmessages()","web3::shhcalls#shh_hasidentity()","web3::shhcalls#shh_newfilter()","web3::shhcalls#shh_newgroup()","web3::shhcalls#shh_newidentity()","web3::shhcalls#shh_post()","web3::shhcalls#shh_uninstallfilter()","web3::shhcalls#shh_version()","string#signature()","web3#to_0x()","web3#to_decimal()","web3#to_hex()","integer#to_padded_hex_string()","web3::txpoolcalls#txpool_status()","web3::web3calls#web3_clientversion()","web3::web3calls#web3_sha3()","web3#wei_to_ether()","",""],"info":[["ContractModel","","ContractModel.html","",""],["GeneratedWeb3Methods","","GeneratedWeb3Methods.html","",""],["Integer","","Integer.html","",""],["Object","","Object.html","",""],["String","","String.html","",""],["Web3","","Web3.html","",""],["Web3::EthCalls","","Web3/EthCalls.html","",""],["Web3::MinerCalls","","Web3/MinerCalls.html","",""],["Web3::NetCalls","","Web3/NetCalls.html","",""],["Web3::PersonalCalls","","Web3/PersonalCalls.html","",""],["Web3::ShhCalls","","Web3/ShhCalls.html","",""],["Web3::TxpoolCalls","","Web3/TxpoolCalls.html","",""],["Web3::Web3Calls","","Web3/Web3Calls.html","",""],["call","ContractModel","ContractModel.html#method-i-call","(method, arguments)",""],["createContract","Web3","Web3.html#method-i-createContract","(from_address, bin_file, password)",""],["do_request","Web3","Web3.html#method-i-do_request","(method, params = [], id = @id)","<p>this is the method responsible for communicating with the endpoint it gets\ncalled by all the action-specific …\n"],["eth_accounts","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_accounts","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_accounts\n"],["eth_blockNumber","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_blockNumber","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_blocknumber\n"],["eth_call","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_call","(trans_object,block=\"latest\")","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_call\n"],["eth_coinbase","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_coinbase","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_coinbase\n"],["eth_compileLLL","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_compileLLL","(code)","<p>deprecated\n\n<pre>See https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_compilelll</pre>\n"],["eth_compileSerpent","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_compileSerpent","(code)","<p>deprecated See github.com/ethereum/wiki/wiki/JSON-RPC#eth_compileserpent\n"],["eth_compileSolidity","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_compileSolidity","(code)","<p>deprecated See github.com/ethereum/wiki/wiki/JSON-RPC#eth_compilesolidity\n"],["eth_estimateGas","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_estimateGas","(trans_object)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_estimategas\n"],["eth_gasPrice","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_gasPrice","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_gasprice\n"],["eth_getBalance","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getBalance","(address, block = \"latest\")","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getbalance\n"],["eth_getBlockByHash","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getBlockByHash","(hash, full_transactions = true)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getblockbyhash\n"],["eth_getBlockByNumber","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getBlockByNumber","(number, full_transactions = true)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getblockbynumber\n"],["eth_getBlockTransactionCountByHash","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getBlockTransactionCountByHash","(data)","<p>See\ngithub.com/ethereum/wiki/wiki/JSON-RPC#eth_getblocktransactioncountbyhash\n"],["eth_getBlockTransactionCountByNumber","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getBlockTransactionCountByNumber","(block = \"latest\")","<p>See\ngithub.com/ethereum/wiki/wiki/JSON-RPC#eth_getblocktransactioncountbynumber\n"],["eth_getCode","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getCode","(address, block = \"latest\")","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getcode\n"],["eth_getCompilers","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getCompilers","()","<p>deprecated See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getcompilers\n"],["eth_getFilterChanges","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getFilterChanges","(id)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getfilterchanges\n"],["eth_getFilterLogs","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getFilterLogs","(id)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getfilterlogs\n"],["eth_getLogs","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getLogs","(filter_obj)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getlogs\n"],["eth_getStorageAt","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getStorageAt","(storage_address, position, block = \"latest\")","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getstorageat\n"],["eth_getTransactionByBlockHashAndIndex","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getTransactionByBlockHashAndIndex","(hash, index)","<p>See\ngithub.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactionbyblockhashandindex\n"],["eth_getTransactionByBlockNumberAndIndex","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getTransactionByBlockNumberAndIndex","(number, index)","<p>See\ngithub.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactionbyblocknumberandindex\n"],["eth_getTransactionByHash","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getTransactionByHash","(hash)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactionbyhash\n"],["eth_getTransactionCount","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getTransactionCount","(address, block = \"latest\")","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactioncount\n"],["eth_getTransactionReceipt","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getTransactionReceipt","(hash)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_gettransactionreceipt\n"],["eth_getUncleByBlockHashAndIndex","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getUncleByBlockHashAndIndex","(hash, index)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getunclebyblockhashandindex\n"],["eth_getUncleByBlockNumberAndIndex","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getUncleByBlockNumberAndIndex","(number, index)","<p>See\ngithub.com/ethereum/wiki/wiki/JSON-RPC#eth_getunclebyblocknumberandindex\n"],["eth_getUncleCountByBlockHash","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getUncleCountByBlockHash","(data)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getunclecountbyblockhash\n"],["eth_getUncleCountByBlockNumber","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getUncleCountByBlockNumber","(data)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getunclecountbyblocknumber\n"],["eth_getWork","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_getWork","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_getwork\n"],["eth_hashrate","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_hashrate","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_hashrate\n"],["eth_mining","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_mining","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_mining\n"],["eth_newBlockFilter","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_newBlockFilter","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_newblockfilter\n"],["eth_newFilter","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_newFilter","(fromBlock, toBlock, address, topics)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_newfilter\n"],["eth_newPendingTransactionFilter","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_newPendingTransactionFilter","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_newpendingtransactionfilter\n"],["eth_pendingTransactions","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_pendingTransactions","()","<p>Returns pending transactions that belong to any of the users accounts See\ngithub.com/ethereum/go-ethereum/wiki/JavaScript-Console#ethpendingtransactions\n…\n"],["eth_protocolVersion","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_protocolVersion","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_protocolversion\n"],["eth_resend","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_resend","(pending_transaction, gasPrice=nil, gasLimit=nil)","<p>Resends a transaction. These can ge retrieved from\neth_pendingTransactions(). gasPrice and gasLimit can …\n"],["eth_sendRawTransaction","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_sendRawTransaction","(data)","<p>This sends a transaction that looks something like this: See\ngithub.com/ethereum/wiki/wiki/JSON-RPC#eth_sendrawtransaction …\n"],["eth_sendTransaction","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_sendTransaction","(transaction_object)","<p>Sends a transaction for posting to the ethereum network. The\ntransaction_object that is sent should look …\n"],["eth_sign","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_sign","(address, data)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n"],["eth_submitHashrate","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_submitHashrate","(hashrate, id)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_submithashrate\n"],["eth_submitWork","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_submitWork","(nonce, powHash, mixDigest)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_submitwork\n"],["eth_syncing","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_syncing","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_syncing\n"],["eth_uninstallFilter","Web3::EthCalls","Web3/EthCalls.html#method-i-eth_uninstallFilter","(id)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#eth_uninstallfilter\n"],["ether_to_0xwei","Web3","Web3.html#method-i-ether_to_0xwei","(ether)","<p>Converts either to wei a hex-formatted string, including the 0x indicator\n"],["ether_to_wei","Web3","Web3.html#method-i-ether_to_wei","(ether)","<p>Converts either to wei\n"],["getContractAddress","Web3","Web3.html#method-i-getContractAddress","(tx_number)",""],["loadAbiFile","Object","Object.html#method-i-loadAbiFile","(path)",""],["miner_makeDAG","Web3::MinerCalls","Web3/MinerCalls.html#method-i-miner_makeDAG","(number)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#miner_makedag\n"],["miner_setExtra","Web3::MinerCalls","Web3/MinerCalls.html#method-i-miner_setExtra","(extra)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#miner_setextra\n"],["miner_setGasPrice","Web3::MinerCalls","Web3/MinerCalls.html#method-i-miner_setGasPrice","(gasPrice)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#miner_setgasprice\n"],["miner_start","Web3::MinerCalls","Web3/MinerCalls.html#method-i-miner_start","(threads)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#miner_start\n"],["miner_startAutoDAG","Web3::MinerCalls","Web3/MinerCalls.html#method-i-miner_startAutoDAG","(number)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#miner_startautodag\n"],["miner_stop","Web3::MinerCalls","Web3/MinerCalls.html#method-i-miner_stop","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#miner_stop\n"],["miner_stopAutoDAG","Web3::MinerCalls","Web3/MinerCalls.html#method-i-miner_stopAutoDAG","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#miner_stopautodag\n"],["net_listening","Web3::NetCalls","Web3/NetCalls.html#method-i-net_listening","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#net_listening\n"],["net_peerCount","Web3::NetCalls","Web3/NetCalls.html#method-i-net_peerCount","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#net_peercount\n"],["net_version","Web3::NetCalls","Web3/NetCalls.html#method-i-net_version","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#net_version\n"],["new","ContractModel","ContractModel.html#method-c-new","(abi)",""],["new","Web3","Web3.html#method-c-new","( endpoint = ENV[\"ETH_ENDPOINT\"] || \"http://localhost:8545\", id = ENV[\"ETH_DEFAULT_CLIENT_ID\"] || 999)","<p>the default endpoint is localhost:8545 and default client id is 999 these\ncan be set as envioronment …\n"],["personal_ecRecover","Web3::PersonalCalls","Web3/PersonalCalls.html#method-i-personal_ecRecover","(message, signature)","<p>See github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_ecrecover\n"],["personal_importRawKey","Web3::PersonalCalls","Web3/PersonalCalls.html#method-i-personal_importRawKey","(key, passphrase)","<p>See\ngithub.com/ethereum/go-ethereum/wiki/Management-APIs#personal_importrawkey\n"],["personal_listAccounts","Web3::PersonalCalls","Web3/PersonalCalls.html#method-i-personal_listAccounts","()","<p>See\ngithub.com/ethereum/go-ethereum/wiki/Management-APIs#personal_listaccounts\n"],["personal_lockAccount","Web3::PersonalCalls","Web3/PersonalCalls.html#method-i-personal_lockAccount","(account)","<p>See\ngithub.com/ethereum/go-ethereum/wiki/Management-APIs#personal_lockaccount\n"],["personal_newAccount","Web3::PersonalCalls","Web3/PersonalCalls.html#method-i-personal_newAccount","(password)","<p>See\ngithub.com/ethereum/go-ethereum/wiki/Management-APIs#personal_newaccount\n"],["personal_sign","Web3::PersonalCalls","Web3/PersonalCalls.html#method-i-personal_sign","(message, account, password)","<p>See github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n"],["personal_signAndSendTransaction","Web3::PersonalCalls","Web3/PersonalCalls.html#method-i-personal_signAndSendTransaction","(transaction, passphrase)","<p>See\ngithub.com/ethereum/go-ethereum/wiki/Management-APIs#personal_signandsendtransaction\n"],["personal_unlockAccount","Web3::PersonalCalls","Web3/PersonalCalls.html#method-i-personal_unlockAccount","(account, passphrase, duration)","<p>Be careful with this method. Do not leave an account unlocked, as that\ncreates an opportunity for an …\n"],["sendEther","Web3","Web3.html#method-i-sendEther","(from_address, to_address, ether, password)","<p>Convenience function to simply send ether from one account to another,\nusing the default gas settings. …\n"],["shh_addToGroup","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_addToGroup","(address)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_addtogroup\n"],["shh_getFilterChanges","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_getFilterChanges","(id)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n"],["shh_getMessages","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_getMessages","(id)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_getmessages\n"],["shh_hasIdentity","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_hasIdentity","(address)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_hasidentity\n"],["shh_newFilter","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_newFilter","(filter_object)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_newfilter\n"],["shh_newGroup","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_newGroup","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_newgroup\n"],["shh_newIdentity","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_newIdentity","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_newidentity\n"],["shh_post","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_post","(post_object)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_post\n"],["shh_uninstallFilter","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_uninstallFilter","(id)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_uninstallfilter\n"],["shh_version","Web3::ShhCalls","Web3/ShhCalls.html#method-i-shh_version","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#shh_version\n"],["signature","String","String.html#method-i-signature","()",""],["to_0x","Web3","Web3.html#method-i-to_0x","(decimal)","<p>Converts a decimal integer to a hex string that starts with a 0x marker\n"],["to_decimal","Web3","Web3.html#method-i-to_decimal","(hex)","<p>Utility methods\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Converts</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">hex</span> <span class=\"ruby-identifier\">string</span> <span class=\"ruby-keyword\">or</span> <span class=\"ruby-identifier\">int</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">decimal</span> <span class=\"ruby-identifier\">integer</span>\n</pre>\n"],["to_hex","Web3","Web3.html#method-i-to_hex","(decimal)","<p>Converts a decimal integer to a hex string\n"],["to_padded_hex_string","Integer","Integer.html#method-i-to_padded_hex_string","()",""],["txpool_status","Web3::TxpoolCalls","Web3/TxpoolCalls.html#method-i-txpool_status","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#txpool_status\n"],["web3_clientVersion","Web3::Web3Calls","Web3/Web3Calls.html#method-i-web3_clientVersion","()","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#web3_clientversion\n"],["web3_sha3","Web3::Web3Calls","Web3/Web3Calls.html#method-i-web3_sha3","(data)","<p>See github.com/ethereum/wiki/wiki/JSON-RPC#web3_sha3\n"],["wei_to_ether","Web3","Web3.html#method-i-wei_to_ether","(wei)","<p>Converts wei to ether\n"],["KeyValueStore.abi","","KeyValueStore_abi.html","","<p>KeyValueStore.sol:KeyValueStore =======\n<p>Contract JSON ABI\n<p>{“constant”:false,“inputs”:,“name”:“get”,“outputs”: … &mdash; \n"],["test.abi","","test_abi.html","","<p>KeyValueStore.sol:KeyValueStore =======\n<p>Contract JSON ABI [{“constant”:false,\n\n<pre>  &quot;inputs&quot;:[{&quot;name&quot;:&quot;_key&quot;,&quot;type&quot;:&quot;bytes32&quot;}], ...</pre>\n"]]}}